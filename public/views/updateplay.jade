extend layout
block content
  div.col-sm-12.gdadb-content
    div(ng-controller="myApp")
      form(sf-schema="playschema" sf-form="form" sf-model="model", enctype="multipart/form-data", method="POST", action="/update/#{play._id}")
        div.col-sm-6
          dl
            dt
              label(for="_id") Title
            dd
              input.lrg(type="text", id="_id", class="required", name="_id", autocomplete="off", style="cursor:auto", value="#{play._id}")
          dl
            dt
              label(for="keywords") Keywords
            dd
              input.lrg(type="text", id="keywords", name="keywords", value="#{play.keywords}")
          dl
            dt
              label(for="genres") Genres
            dd
              input.lrg(type="text", id="genres", name="genres", value="#{play.genres}")
          dl
            dt
              label(for="performanceseason") Season
            dd
              select.sml(size="1", name="performanceseason", id="performanceseason")
                option.sml(value="Fall", selected=('#{play.performanceseason}' == 'Fall')) Fall
                option.sml(value="Spring", selected=('#{play.performanceseason}' == 'Spring')) Spring
          dl
            dt
              label(for="year") Year
            dd
              input.sml(type="Text", id="year", class="digits", name="year", value="#{play.performanceyear}")
        div.col-sm-6
          dl
            dt
              label(for="playbillimage") Playbill Image
            dd
              img.smbill(src="#{play.imageURL}")
              input(type="file", id="playbillimage", name="playbillimage", accept=".gif,.png,.jpg")
          dl
            dt
              label(for="description") Description
            dd
              textarea(id="description", name="description", rows="5", cols="60")
                | #{play.description}
        div.col-sm-12
          dl.clear
            button.btn.btn-info(type="button", id="addproducer", name="addproducer", data-toggle="modal", data-target="#addProducer") Add new producer
            br
            dl.left
              dt
                label(for="producername") Producer
              dd
                input.lrg(type="text", id="producername", name="producername", placeholder="Last Name, First")
          dl.clear
            button.btn.btn-info(type="button", id="adddirector", name="adddirector", data-toggle="modal", data-target="#addDirector") Add new director
            br
            dl.left
              dt
                label(for="directorname") Director
              dd
                input.lrg(type="text", id="directorname", name="directorname", placeholder="Last Name, First")
          fieldset.clear
            legend Cast
            button.btn.btn-info(type="button", id="addcast", name="addcast", data-toggle="modal", data-target="#addCastMember") Add new cast member
            br
            dl.left
              dt
                label(for="castname") Cast Member Name
              dd
                input.lrg(type="text", id="castname", name="castname", placeholder="Last Name, First")
            dl.left
              dt
                label(for="castrole") Cast Member Role
              dd
                input.lrg(type="text", id="castrole", name="castrole")
                button.pad10left(id="newrole", name="newrole") Save
          fieldset
            legend Crew
            button.btn.btn-info(type="button", id="addcrew", name="addcrew", data-toggle="modal", data-target="#addCrewMember") Add new crew member
            br
            dl.left
              dt
                label(for="crewname") Crew Member Name
              dd
                input.lrg(type="text", id="crewname", name="crewname", placeholder="Last Name, First")
            dl.left
              dt
                label(for="crewrole") Crew Member Role
              dd
                input.lrg(type="text", id="crewrole", name="crewrole")
                button.pad10left(id="newrole2", name="newrole2") Save
          fieldset
            legend Performances
            dl
              label(for="performancedate") Performance Date
            dd
              input(type="text", id="performancedate", name="performancedate")
              button.btn Add new date
          br
          br
        div.row
          div.title.centered.col-sm-12
            div(id=submit_button)
              button.btn.btn-lg(type="submit") Save
              input(type="hidden", id="castyear", name="castyear", value="")
              input(type="hidden", id="crewyear", name="crewyear", value="")
      div.modal.fade(id="addCastMember", role="dialog")
        div.modal-dialog
          div.modal-content
            form(id="newcast", name="newcast")
              div.modal-header
                h3 Add New Cast Member
              div.modal-body
                dl
                  dt
                    label(for="castmembername") Cast Member Name
                  dd
                    input.lrg(type="text", id="castmembername", name="castmembername", placeholder="Last Name, First")
                dl
                  dt
                    label(for="gradyear") Graduation year
                  dd
                    input.lrg(type="text", id="gradyear", name="gradyear", placeholder="YYYY")
                dl
                  dt
                    label(for="castmemberschool") Cast Member's School
                  dd
                    input.lrg(type="text", id="castmemberschool", name="castmemberschool")
              div.modal-footer  
                button.btn.btn-default(name="newpersonsubmit", id="newpersonsubmit", type="button" data-dismiss="modal") Save
      div.modal.fade(id="addCrewMember", role="dialog")
        div.modal-dialog
          div.modal-content
            form(id="newcrew", name="newcrew")
              div.modal-header
                h3 Add New Crew Member
              div.modal-body
                dl
                  dt
                    label(for="crewmembername") Crew Member Name
                  dd
                    input.lrg(type="text", id="crewmembername", name="crewmembername", placeholder="Last Name, First")
                dl
                  dt
                    label(for="crewmemberyear") Graduation year
                  dd
                    input.lrg(type="text", id="crewgradyear", name="crewgradyear", placeholder="YYYY")
                dl
                  dt
                    label(for="crewmemberschool") Crew Member's School
                  dd
                    input.lrg(type="text", id="crewmemberschool", name="crewmemberschool")
              div.modal-footer  
                button.btn.btn-default(name="newpersonsubmit2", id="newpersonsubmit2", type="button" data-dismiss="modal") Save
      div.modal.fade(id="addDirector", role="dialog")
        div.modal-dialog
          div.modal-content
            form(id="newdir", name="newdir")
              div.modal-header
                h3 Add New Director
              div.modal-body
                dl
                  dt
                    label(for="dirname") Director's Name
                  dd
                    input.lrg(type="text", id="dirname", name="dirname", placeholder="Last Name, First")
                dl
                  dt
                    label(for="diryear") Graduation year
                  dd
                    input.lrg(type="text", id="diryear", name="diryear", placeholder="YYYY")
                dl
                  dt
                    label(for="dirschool") Director's School
                  dd
                    input.lrg(type="text", id="dirschool", name="dirschool")
              div.modal-footer  
                button.btn.btn-default(name="newpersonsubmit3", id="newpersonsubmit3", type="button" data-dismiss="modal") Save
      div.modal.fade(id="addProducer", role="dialog")
        div.modal-dialog
          div.modal-content
            form(id="newprod", name="newprod")
              div.modal-header
                h3 Add New Producer
              div.modal-body
                dl
                  dt
                    label(for="prodname") Producer's Name
                  dd
                    input.lrg(type="text", id="prodname", name="prodname", placeholder="Last Name, First")
                dl
                  dt
                    label(for="prodyear") Graduation year
                  dd
                    input.lrg(type="text", id="prodyear", name="prodyear", placeholder="YYYY")
                dl
                  dt
                    label(for="prodschool") Producer's School
                  dd
                    input.lrg(type="text", id="prodschool", name="prodschool")
              div.modal-footer  
                button.btn.btn-default(name="newpersonsubmit4", id="newpersonsubmit4", type="button" data-dismiss="modal") Save
block scripts
  script.
    $(function() {
    $( "#castname" ).autocomplete({
      appendTo: "castname",
      source: function( request, response ) {
        $.ajax({
          url: "/api/namesearch",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
          }
        });
      },
      minLength: 3,
      select: function( event, ui ) {
            $('#castname').val($('#castmembername').val());
            $('#castyear').val($('#gradyear').val());
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#crewname" ).autocomplete({
      appendTo: "crewname",
      source: function( request, response ) {
        $.ajax({
          url: "/api/namesearch",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
          }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
            $('#dirname').val($('#crewmembername').val());
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#producername" ).autocomplete({
      appendTo: "producername",
      source: function( request, response ) {
        $.ajax({
          url: "/api/namesearch",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
          }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
            $('#prodname').val($('#producername').val());
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#directorname" ).autocomplete({
      appendTo: "directorname",
      source: function( request, response ) {
        $.ajax({
          url: "/api/namesearch",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
          }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
            $('#crewname').val($('#directorname').val());
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#castmemberschool" ).autocomplete({
      appendTo: "castmemberschool",
      source: function( request, response ) {
        $.ajax({
          url: "/api/school",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
         }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#crewmemberschool" ).autocomplete({
      appendTo: "crewmemberschool",
      source: function( request, response ) {
        $.ajax({
          url: "/api/school",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
         }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#dirschool" ).autocomplete({
      appendTo: "dirschool",
      source: function( request, response ) {
        $.ajax({
          url: "/api/school",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
         }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $( "#prodschool" ).autocomplete({
      appendTo: "prodschool",
      source: function( request, response ) {
        $.ajax({
          url: "/api/school",
          dataType: "jsonp",
          data: {
            q: request.term
          },

          success: function( data ) {
            response( $.map(data, function(item) {
        	  return {
        	    label: item
        	  };
            }));
          },
          complete: function() {
         }

        });
      },
      minLength: 3,
      select: function( event, ui ) {
      },
      open: function() {
        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
      },
      close: function() {
        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
      }
    });

    $("#newpersonsubmit").on('click', function(e) {
      e.preventDefault();
      $.ajax({
        url: "/api/addperson",
        type: "POST",
        data: {
          name: $("#castmembername").val(),
          year: $("#gradyear").val(),
          school: $("#castmemberschool").val(),
          bio: ''
        },
        success: function(data) {
          $('#castname').val($('#castmembername').val());
          $('#castyear').val($('#gradyear').val());
        } 
      });
    });

    $("#newpersonsubmit2").on('click', function(e) {
      e.preventDefault();
      $.ajax({
        url: "/api/addperson",
        type: "POST",
        data: {
          name: $("#crewmembername").val(),
          year: $("#crewgradyear").val(),
          school: $("#crewmemberschool").val(),
          bio: ''
        },
        success: function(data) {
          $('#crewname').val($('#crewmembername').val());
          $('#crewyear').val($('#crewgradyear').val());
        } 
      });
    });

    $("#newrole").on('click', function() {
      $.ajax({
        url: "/api/addrole",
        type: "POST",
        data: {
          name: $("#castname").val(),
          year: $("#castyear").val(),
          role: 'CAST:' + $('#castrole').val(),
          play: $('#_id').val()
        },
        success: function(data) {
          alert("Added new role");
        } 
      });
    });

    $("#newrole2").on('click', function() {
      $.ajax({
        url: "/api/addrole",
        type: "POST",
        data: {
          name: $("#crewname").val(),
          year: $("#crewyear").val(),
          role: 'CREW:' + $('#crewrole').val(),
          play: $('#_id').val()
        },
        success: function(data) {
          alert("Added new role");
        } 
      });
    });

    $("#newpersonsubmit3").on('click', function(e) {
      e.preventDefault();
      $.ajax({
        url: "/api/addperson",
        type: "POST",
        data: {
          name: $("#dirname").val(),
          year: $("#diryear").val(),
          school: $("#dirschool").val(),
          bio: ''
        },
        success: function(data) {
          $('#directorname').val($('#dirname').val());
          $('#directoryear').val($('#diryear').val());
        } 
      });
    });

    $("#newpersonsubmit4").on('click', function(e) {
      e.preventDefault();
      $.ajax({
        url: "/api/addperson",
        type: "POST",
        data: {
          name: $("#prodname").val(),
          year: $("#prodyear").val(),
          school: $("#prodschool").val(),
          bio: ''
        },
        success: function(data) {
          $('#producername').val($('#prodname').val());
          $('#produceryear').val($('#prodyear').val());
        } 
      });
    });

    $('#performancedate').datepicker();

    });

